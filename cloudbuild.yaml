substitutions:
  _ARTIFACT_BUCKET: gs://rpa-devops-artifacts
  _DOC_BUCKET: documentation.redpillanalytics.com
  _DOC_PATH: ${_DOC_BUCKET}/${REPO_NAME}
  _DOC_REMOTE: s3://${_DOC_PATH}
  _DOC_LOCAL: build/docs/groovydoc/
  _DOC_BASE_URL: https://s3.amazonaws.com/${_DOC_PATH}
  _ARTIFACT_LOCATION: ${_ARTIFACT_BUCKET}/${REPO_NAME}
  _STATUS_FILE: build-status.txt
  # Get repository URL
  _REPO_URL: $(body.repository.html_url)
steps:
- name: gcr.io/$PROJECT_ID/project-version
  id: version
  args:
    - $_REPO_URL
    - $BRANCH_NAME
  waitFor: [ '-' ]
- name: gcr.io/$PROJECT_ID/docker-compose
  id: test
  entrypoint: bash
  args:
    - '-cx'
    - |
       ./gradlew cleanLibs build groovydoc runAllTests buildDashboard validatePlugins
  env:
    - 'PROJECT_ID=$PROJECT_ID'
  waitFor:
    - version
- name: gcr.io/google.com/cloudsdktool/cloud-sdk
  id: publish
  entrypoint: bash
  args:
   - '-cx'
   - |
      if [ $BRANCH_NAME == "master" ]
      then
        ./gradlew publish -Pgradle.publish.key=$${GRADLE_KEY} -Pgradle.publish.secret=$${GRADLE_SECRET}
      fi
  waitFor:
    - test
# Need a rewrite of gradle-analytics that doesn't rely on a local git repo
# - name: gcr.io/google.com/cloudsdktool/cloud-sdk
#   id: analytics
#   entrypoint: bash
#   args:
#    - '-c'
#    - |
#       ./gradlew producer
#   waitFor:
#     - publish
- name: amazon/aws-cli
  id: publish-docs
  entrypoint: bash
  args:
   - '-cx'
   - |
      if [ $BRANCH_NAME == "master" ]
      then
        aws s3 sync ${_DOC_LOCAL} ${_DOC_REMOTE}/`<stepvars/version`/ \
        && aws s3 sync ${_DOC_LOCAL} ${_DOC_REMOTE}/latest \
        && echo "Version API documentation located at: ${_DOC_BASE_URL}/`<stepvars/version`/overview-summary.html" \
        && echo "Latest API documentation located at: ${_DOC_BASE_URL}/latest/overview-summary.html"
      fi
  waitFor:
    - test
    - publish
timeout: 3600s
options:
  #machineType: 'N1_HIGHCPU_32'
  substitution_option: 'ALLOW_LOOSE'
  dynamic_substitutions: true
  env:
    - GRADLE_USER_HOME=.gradle
    - GRADLE_OPTS="-Dorg.gradle.daemon=false"
    - ORG_GRADLE_PROJECT_analytics_buildTag=$BUILD_ID
    - CI=true
  secretEnv:
    - GITHUB_TOKEN
    - AWS_ACCESS_KEY_ID
    - AWS_SECRET_ACCESS_KEY
    - GRADLE_KEY
    - GRADLE_SECRET
artifacts:
  objects:
    location: ${_ARTIFACT_LOCATION}
    paths:
      - build/libs/*.jar
availableSecrets:
  secretManager:
    - versionName: projects/737919165778/secrets/GITHUB_TOKEN/versions/latest
      env: GITHUB_TOKEN
    - versionName: projects/737919165778/secrets/AWS_ACCESS_KEY_ID/versions/latest
      env: AWS_ACCESS_KEY_ID
    - versionName: projects/737919165778/secrets/AWS_SECRET_ACCESS_KEY/versions/latest
      env: AWS_SECRET_ACCESS_KEY
    - versionName: projects/737919165778/secrets/GRADLE_KEY/versions/latest
      env: GRADLE_KEY
    - versionName: projects/737919165778/secrets/GRADLE_SECRET/versions/latest
      env: GRADLE_SECRET